# Model
model:
  rest_name: automation
  resource_name: automations
  entity_name: Automation
  package: sephiroth
  group: integration/automation
  description: An automation needs documentation.
  aliases:
  - autos
  - auto
  get:
    description: Retrieves the object with the given ID.
  update:
    description: Updates the object with the given ID.
  delete:
    description: Deletes the object with the given ID.
    global_parameters:
    - $filtering
  extends:
  - '@base'
  - '@zoned'
  - '@namespaced'
  - '@described'
  - '@disabled'
  - '@identifiable-stored'
  - '@named'
  - '@timeable'
  validations:
  - $automations

# Attributes
attributes:
  v1:
  - name: actions
    description: Action contains the code that will be executed if the condition is
      met.
    type: list
    exposed: true
    subtype: string
    stored: true

  - name: condition
    description: |-
      Condition contains the code that will be executed to decide if any action should
      be taken.
    type: string
    exposed: true
    stored: true
    required: true
    example_value: 'function when(m, params) { return { continue: true }}'

  - name: entitlements
    description: Entitlements declares which operations are allowed on which identities.
    type: external
    exposed: true
    subtype: _automation_entitlements
    stored: true

  - name: errors
    description: Error contains the eventual error of the last run.
    type: list
    exposed: true
    subtype: string
    stored: true
    read_only: true
    autogenerated: true

  - name: events
    description: |-
      Events contains the identity and operation an event must have to trigger the
      automation.
    type: external
    exposed: true
    subtype: _automation_events
    stored: true

  - name: lastExecTime
    description: LastExecTime holds the last successful execution tine.
    type: time
    exposed: true
    stored: true
    read_only: true
    autogenerated: true

  - name: parameters
    description: Parameters contains the computed parameters.
    type: external
    exposed: true
    subtype: map[string]interface{}
    stored: true

  - name: schedule
    description: |-
      Schedule tells when to run the automation. Must be a valid CRON format. This
      only applies if the trigger is set to Time.
    type: string
    exposed: true
    stored: true

  - name: stdout
    description: Stdout contains the last run standard output.
    type: string
    exposed: true
    stored: true
    read_only: true
    autogenerated: true

  - name: token
    description: |-
      Token holds the unique access token used as a password to trigger the
      authentication. It will be visible only after creation.
    type: string
    exposed: true
    stored: true
    autogenerated: true
    transient: true

  - name: tokenRenew
    description: If set to true a new token will be issued, and the previous one invalidated.
    type: boolean
    exposed: true

  - name: trigger
    description: Trigger controls when the automation should be triggered.
    type: enum
    exposed: true
    stored: true
    allowed_choices:
    - Event
    - RemoteCall
    - Time
    default_value: Time
    orderable: true

  - name: webhookMode
    description: |-
      WebhookMode applies only to automations with a RemoteCall trigger mode. If set
      to true, the call to the trigger will block until the defined action has been
      processed. This is particularly useful if you are using an automation to process
      a webhook. Only one action can be defined if this option is enabled.
    type: boolean
    exposed: true
    stored: true

# Relations
relations:
- rest_name: trigger
  get:
    description: |-
      Allows a system to trigger the automation if its `triggerType` property is set
      to `RemoteCall`.
  create:
    description: |-
      Allows a system to trigger the automation if its `triggerType` property is set
      to `RemoteCall`.
